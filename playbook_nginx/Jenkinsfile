pipeline {
    agent any

    parameters {
        choice(
            name: 'ENVIRONMENT',
            choices: ['dev', 'staging', 'prod'],
            description: 'Выберите окружение для деплоя'
        )
        string(
            name: 'TARGET_HOSTS',
            defaultValue: 'all',
            description: 'Целевые хосты или группа из inventory'
        )
    }

    environment {
        ANSIBLE_HOST_KEY_CHECKING = 'false'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main',
                    url: 'https://github.com/your-username/your-repo.git',
                    credentialsId: 'github-credentials'
            }
        }

        stage('Ansible Syntax Check') {
            steps {
                sh '''
                    ansible-playbook --syntax-check site.yml
                '''
            }
        }

        stage('Ansible Lint') {
            steps {
                sh '''
                    # Опционально: проверка качества кода
                    ansible-lint site.yml || true
                '''
            }
        }

        stage('Run Ansible Playbook') {
            steps {
                script {
                    withCredentials([
                        sshUserPrivateKey(
                            credentialsId: 'ansible-ssh-key',
                            keyFileVariable: 'SSH_KEY_FILE',
                            usernameVariable: 'SSH_USERNAME'
                        )
                    ]) {
                        sh """
                            export ANSIBLE_PRIVATE_KEY_FILE=${SSH_KEY_FILE}
                            ansible-playbook \
                                -i inventory/${params.ENVIRONMENT} \
                                -l ${params.TARGET_HOSTS} \
                                --extra-vars "env=${params.ENVIRONMENT}" \
                                site.yml
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            cleanWs()
        }
        success {
            slackSend(
                channel: '#deployments',
                message: "✅ Ansible deployment to ${params.ENVIRONMENT} completed successfully"
            )
        }
        failure {
            slackSend(
                channel: '#deployments',
                message: "❌ Ansible deployment to ${params.ENVIRONMENT} failed"
            )
        }
    }
}